/**
 * Copyright (c) 2016-2022 by the respective copyright holders.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zigbee.dongle.ember.ezsp.structure;

import com.zsmartsystems.zigbee.dongle.ember.internal.serializer.EzspDeserializer;
import com.zsmartsystems.zigbee.dongle.ember.internal.serializer.EzspSerializer;

/**
 * Class to implement the Ember Structure <b>EmberGpAddress</b>.
 * <p>
 * A GP address structure.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class EmberGpAddress {

    /**
     * The GPD's source ID. The 32-bit source identifier is used when the application identifier is
     * EMBER_GP_APPLICATION_SOURCE_ID.
     * <p>
     * EZSP type is <i>uint8_t[8]</i> - Java type is {@link int[]}
     */
    private int[] gpdSource;

    /**
     * The GPD Application ID.
     * <p>
     * EZSP type is <i>EmberGpApplicationId</i> - Java type is {@link EmberGpApplicationId}
     */
    private EmberGpApplicationId applicationId;

    /**
     * The GPD endpoint.
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     */
    private int endpoint;

    /**
     * Default Constructor
     */
    public EmberGpAddress() {
    }

    public EmberGpAddress(EzspDeserializer deserializer) {
        deserialize(deserializer);
    }

    /**
     * The GPD's source ID. The 32-bit source identifier is used when the application identifier is
     * EMBER_GP_APPLICATION_SOURCE_ID.
     * <p>
     * EZSP type is <i>uint8_t[8]</i> - Java type is {@link int[]}
     *
     * @return the current gpdSource as {@link int[]}
     */
    public int[] getGpdSource() {
        return gpdSource;
    }

    /**
     * The GPD's source ID. The 32-bit source identifier is used when the application identifier is
     * EMBER_GP_APPLICATION_SOURCE_ID.
     *
     * @param gpdSource the gpdSource to set as {@link int[]}
     */
    public void setGpdSource(int[] gpdSource) {
        this.gpdSource = gpdSource;
    }

    /**
     * The GPD Application ID.
     * <p>
     * EZSP type is <i>EmberGpApplicationId</i> - Java type is {@link EmberGpApplicationId}
     *
     * @return the current applicationId as {@link EmberGpApplicationId}
     */
    public EmberGpApplicationId getApplicationId() {
        return applicationId;
    }

    /**
     * The GPD Application ID.
     *
     * @param applicationId the applicationId to set as {@link EmberGpApplicationId}
     */
    public void setApplicationId(EmberGpApplicationId applicationId) {
        this.applicationId = applicationId;
    }

    /**
     * The GPD endpoint.
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     *
     * @return the current endpoint as {@link int}
     */
    public int getEndpoint() {
        return endpoint;
    }

    /**
     * The GPD endpoint.
     *
     * @param endpoint the endpoint to set as {@link int}
     */
    public void setEndpoint(int endpoint) {
        this.endpoint = endpoint;
    }

    /**
     * Serialise the contents of the EZSP structure.
     *
     * @param serializer the {@link EzspSerializer} used to serialize
     */
    public int[] serialize(EzspSerializer serializer) {
        // Serialize the fields
        serializer.serializeUInt8Array(gpdSource);
        serializer.serializeEmberGpApplicationId(applicationId);
        serializer.serializeUInt8(endpoint);
        return serializer.getPayload();
    }

    /**
     * Deserialise the contents of the EZSP structure.
     *
     * @param deserializer the {@link EzspDeserializer} used to deserialize
     */
    public void deserialize(EzspDeserializer deserializer) {
        // Deserialize the fields
        gpdSource = deserializer.deserializeUInt8Array(8);
        applicationId = deserializer.deserializeEmberGpApplicationId();
        endpoint = deserializer.deserializeUInt8();
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder(92);
        builder.append("EmberGpAddress [gpdSource=");
        builder.append('{');
        if (gpdSource == null) {
            builder.append("null");
        } else {
            for (int cnt = 0; cnt < gpdSource.length; cnt++) {
                if (cnt != 0) {
                    builder.append(' ');
                }
                builder.append(String.format("%02X", gpdSource[cnt]));
            }
        }
        builder.append('}');
        builder.append(", applicationId=");
        builder.append(applicationId);
        builder.append(", endpoint=");
        builder.append(endpoint);
        builder.append(']');
        return builder.toString();
    }
}
