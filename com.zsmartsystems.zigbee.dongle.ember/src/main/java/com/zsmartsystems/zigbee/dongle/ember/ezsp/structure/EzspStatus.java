/**
 * Copyright (c) 2014-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zigbee.dongle.ember.ezsp.structure;

import java.util.HashMap;
import java.util.Map;

/**
 * Class to implement the Ember Enumeration <b>EzspStatus</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public enum EzspStatus {
    /**
     * Default unknown value
     */
    UNKNOWN(-1),

    /**
     * Success
     */
    EZSP_SUCCESS(0),

    /**
     * Fatal error
     */
    EZSP_SPI_ERR_FATAL(16),

    /**
     * The Response frame of the current transaction indicates the NCP has reset.
     */
    EZSP_SPI_ERR_NCP_RESET(17),

    /**
     * The NCP is reporting that the Command frame of the current transaction is oversized (the
     * length byte is too large).
     */
    EZSP_SPI_ERR_OVERSIZED_EZSP_FRAME(16),

    /**
     * Insufficient memory was available
     */
    EZSP_ERROR_OUT_OF_MEMORY(53),

    /**
     * The value was out of bounds.
     */
    EZSP_ERROR_INVALID_VALUE(54);

    /**
     * A mapping between the integer code and its corresponding type to
     * facilitate lookup by code.
     */
    private static Map<Integer, EzspStatus> codeMapping;

    private int key;

    private EzspStatus(int key) {
        this.key = key;
    }

    private static void initMapping() {
        codeMapping = new HashMap<Integer, EzspStatus>();
        for (EzspStatus s : values()) {
            codeMapping.put(s.key, s);
        }
    }

    /**
     * Lookup function based on the EmberStatus type code. Returns null if the
     * code does not exist.
     *
     * @param i
     *            the code to lookup
     * @return enumeration value of the alarm type.
     */
    public static EzspStatus getEzspStatus(int i) {
        if (codeMapping == null) {
            initMapping();
        }

        if (codeMapping.get(i) == null) {
            return UNKNOWN;
        }

        return codeMapping.get(i);
    }

    /**
     * Returns the EZSP protocol defined value for this enum
     *
     * @return the EZSP protocol key
     */
    public int getKey() {
        return key;
    }
}
