/**
 * Copyright (c) 2016-2024 by the respective copyright holders.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zigbee.dongle.ember.ezsp.structure;

import com.zsmartsystems.zigbee.dongle.ember.internal.serializer.EzspDeserializer;
import com.zsmartsystems.zigbee.dongle.ember.internal.serializer.EzspSerializer;

/**
 * Class to implement the Ember Structure <b>EmberMultiPhyRadioParameters</b>.
 * <p>
 * Radio parameters.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class EmberMultiPhyRadioParameters {

    /**
     * A power setting, in dBm.
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     */
    private int radioTxPower;

    /**
     * A radio page.
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     */
    private int radioPage;

    /**
     * A radio channel.
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     */
    private int radioChannel;

    /**
     * Default Constructor
     */
    public EmberMultiPhyRadioParameters() {
    }

    public EmberMultiPhyRadioParameters(EzspDeserializer deserializer) {
        deserialize(deserializer);
    }

    /**
     * A power setting, in dBm.
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     *
     * @return the current radioTxPower as {@link int}
     */
    public int getRadioTxPower() {
        return radioTxPower;
    }

    /**
     * A power setting, in dBm.
     *
     * @param radioTxPower the radioTxPower to set as {@link int}
     */
    public void setRadioTxPower(int radioTxPower) {
        this.radioTxPower = radioTxPower;
    }

    /**
     * A radio page.
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     *
     * @return the current radioPage as {@link int}
     */
    public int getRadioPage() {
        return radioPage;
    }

    /**
     * A radio page.
     *
     * @param radioPage the radioPage to set as {@link int}
     */
    public void setRadioPage(int radioPage) {
        this.radioPage = radioPage;
    }

    /**
     * A radio channel.
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     *
     * @return the current radioChannel as {@link int}
     */
    public int getRadioChannel() {
        return radioChannel;
    }

    /**
     * A radio channel.
     *
     * @param radioChannel the radioChannel to set as {@link int}
     */
    public void setRadioChannel(int radioChannel) {
        this.radioChannel = radioChannel;
    }

    /**
     * Serialise the contents of the EZSP structure.
     *
     * @param serializer the {@link EzspSerializer} used to serialize
     */
    public int[] serialize(EzspSerializer serializer) {
        // Serialize the fields
        serializer.serializeUInt8(radioTxPower);
        serializer.serializeUInt8(radioPage);
        serializer.serializeUInt8(radioChannel);
        return serializer.getPayload();
    }

    /**
     * Deserialise the contents of the EZSP structure.
     *
     * @param deserializer the {@link EzspDeserializer} used to deserialize
     */
    public void deserialize(EzspDeserializer deserializer) {
        // Deserialize the fields
        radioTxPower = deserializer.deserializeUInt8();
        radioPage = deserializer.deserializeUInt8();
        radioChannel = deserializer.deserializeUInt8();
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder(106);
        builder.append("EmberMultiPhyRadioParameters [radioTxPower=");
        builder.append(radioTxPower);
        builder.append(", radioPage=");
        builder.append(radioPage);
        builder.append(", radioChannel=");
        builder.append(radioChannel);
        builder.append(']');
        return builder.toString();
    }
}
