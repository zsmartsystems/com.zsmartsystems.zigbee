/**
 * Copyright (c) 2016-2023 by the respective copyright holders.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zigbee.dongle.ember.ezsp.command;

import com.zsmartsystems.zigbee.dongle.ember.ezsp.EzspFrameResponse;

/**
 * Class to implement the Ember EZSP command <b>incomingNetworkStatusHandler</b>.
 * <p>
 * This is called by the stack to notify the application that a network status/route error
 * message has been received.
 * <p>
 * This class provides methods for processing EZSP commands.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class EzspIncomingNetworkStatusHandler extends EzspFrameResponse {
    public static final int FRAME_ID = 0xC4;

    /**
     * Over the air error code.
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     */
    private int errorCode;

    /**
     * The node ID associated with the error.  Depending on the error code this may be either
     * originator of the error message or the node ID of the destination that could not be reached.
     * <p>
     * EZSP type is <i>EmberNodeId</i> - Java type is {@link int}
     */
    private int target;

    /**
     * Response and Handler constructor
     */
    public EzspIncomingNetworkStatusHandler(int[] inputBuffer) {
        // Super creates deserializer and reads header fields
        super(inputBuffer);

        // Deserialize the fields
        errorCode = deserializer.deserializeUInt8();
        target = deserializer.deserializeUInt16();
    }

    /**
     * Over the air error code.
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     *
     * @return the current errorCode as {@link int}
     */
    public int getErrorCode() {
        return errorCode;
    }

    /**
     * Over the air error code.
     *
     * @param errorCode the errorCode to set as {@link int}
     */
    public void setErrorCode(int errorCode) {
        this.errorCode = errorCode;
    }

    /**
     * The node ID associated with the error.  Depending on the error code this may be either
     * originator of the error message or the node ID of the destination that could not be reached.
     * <p>
     * EZSP type is <i>EmberNodeId</i> - Java type is {@link int}
     *
     * @return the current target as {@link int}
     */
    public int getTarget() {
        return target;
    }

    /**
     * The node ID associated with the error.  Depending on the error code this may be either
     * originator of the error message or the node ID of the destination that could not be reached.
     *
     * @param target the target to set as {@link int}
     */
    public void setTarget(int target) {
        this.target = target;
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder(110);
        builder.append("EzspIncomingNetworkStatusHandler [networkId=");
        builder.append(networkId);
        builder.append(", errorCode=");
        builder.append(errorCode);
        builder.append(", target=");
        builder.append(String.format("%04X", target));
        builder.append(']');
        return builder.toString();
    }
}
