/**
 * Copyright (c) 2014-2017 by the respective copyright holders.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zigbee.dongle.ember.ezsp;

import com.zsmartsystems.zigbee.dongle.ember.ezsp.EzspFrameResponse;
import com.zsmartsystems.zigbee.dongle.ember.ezsp.serializer.EzspDeserializer;
import com.zsmartsystems.zigbee.dongle.ember.ezsp.structure.EmberStatus;
import java.util.HashMap;
import java.util.Map;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Class to implement the Ember EZSP command <b>setInitialSecurityState</b>.
 * <p>
 * Sets the security state that will be used by the device when it forms or joins the network. This
 * call should not be used when restoring saved network state via networkInit as this will result
 * in a loss of security data and will cause communication problems when the device re-enters the
 * network.
 * <p>
 * This class provides methods for processing EZSP commands.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class EzspSetInitialSecurityStateResponse extends EzspFrameResponse {
    private static final Logger logger = LoggerFactory.getLogger(EzspSetInitialSecurityStateResponse.class);

    /**
     * The success or failure code of the operation.
     * <p>
     * EZSP type is <i>EmberStatus</i> - Java type is {@link EmberStatus}
     */
    private EmberStatus success;

    /**
     * Response and Handler constructor
     */
    public EzspSetInitialSecurityStateResponse(int[] inputBuffer) {
        super(inputBuffer);
    }

    /**
     * The success or failure code of the operation.
     * <p>
     * EZSP type is <i>EmberStatus</i> - Java type is {@link EmberStatus}
     *
     * @return the current success as {@link EmberStatus}
     */
    public EmberStatus getSuccess() {
        return success;
    }

    /**
     * The success or failure code of the operation.
     *
     * @param success the success to set as {@link EmberStatus}
     */
    public void setSuccess(EmberStatus success) {
        this.success = success;
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder();
        builder.append("EzspSetInitialSecurityStateResponse [success=");
        builder.append(success);
        builder.append("]");
        return builder.toString();
    }
}
