/**
 * Copyright (c) 2016-2018 by the respective copyright holders.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zigbee.dongle.ember.internal.ezsp.command;

import com.zsmartsystems.zigbee.dongle.ember.internal.ezsp.EzspFrameRequest;
import com.zsmartsystems.zigbee.dongle.ember.internal.ezsp.serializer.EzspSerializer;

/**
 * Class to implement the Ember EZSP command <b>gpProxyTableGetEntry</b>.
 * <p>
 * Retrieves the proxy table entry stored at the passed index.
 * <p>
 * This class provides methods for processing EZSP commands.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class EzspGpProxyTableGetEntryRequest extends EzspFrameRequest {
    public static int FRAME_ID = 0xC8;

    /**
     * The index of the requested proxy table entry
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     */
    private int proxyIndex;

    /**
     * Serialiser used to seialise to binary line data
     */
    private EzspSerializer serializer;

    /**
     * Request constructor
     */
    public EzspGpProxyTableGetEntryRequest() {
        frameId = FRAME_ID;
        serializer = new EzspSerializer();
    }

    /**
     * The index of the requested proxy table entry
     * <p>
     * EZSP type is <i>uint8_t</i> - Java type is {@link int}
     *
     * @return the current proxyIndex as {@link int}
     */
    public int getProxyIndex() {
        return proxyIndex;
    }

    /**
     * The index of the requested proxy table entry
     *
     * @param proxyIndex the proxyIndex to set as {@link int}
     */
    public void setProxyIndex(int proxyIndex) {
        this.proxyIndex = proxyIndex;
    }

    @Override
    public int[] serialize() {
        // Serialize the header
        serializeHeader(serializer);

        // Serialize the fields
        serializer.serializeUInt8(proxyIndex);
        return serializer.getPayload();
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder(59);
        builder.append("EzspGpProxyTableGetEntryRequest [proxyIndex=");
        builder.append(proxyIndex);
        builder.append(']');
        return builder.toString();
    }
}
