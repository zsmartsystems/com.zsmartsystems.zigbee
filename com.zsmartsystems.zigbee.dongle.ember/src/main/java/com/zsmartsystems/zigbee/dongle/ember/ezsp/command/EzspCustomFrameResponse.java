/**
 * Copyright (c) 2016-2020 by the respective copyright holders.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zigbee.dongle.ember.ezsp.command;

import com.zsmartsystems.zigbee.dongle.ember.ezsp.EzspFrameResponse;
import com.zsmartsystems.zigbee.dongle.ember.ezsp.structure.EmberStatus;

/**
 * Class to implement the Ember EZSP command <b>customFrame</b>.
 * <p>
 * Provides the customer a custom EZSP frame. On the NCP, these frames are only handled if the
 * XNCP library is included. On the NCP side these frames are handled in the
 * emberXNcpIncomingCustomEzspMessageCallback() callback function.
 * <p>
 * This class provides methods for processing EZSP commands.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson - Initial contribution of Java code generator
 */
public class EzspCustomFrameResponse extends EzspFrameResponse {
    public static final int FRAME_ID = 0x47;

    /**
     * The status returned by the custom command.
     * <p>
     * EZSP type is <i>EmberStatus</i> - Java type is {@link EmberStatus}
     */
    private EmberStatus status;

    /**
     * The response.
     * <p>
     * EZSP type is <i>uint8_t[]</i> - Java type is {@link int[]}
     */
    private int[] reply;

    /**
     * Response and Handler constructor
     */
    public EzspCustomFrameResponse(int[] inputBuffer) {
        // Super creates deserializer and reads header fields
        super(inputBuffer);

        // Deserialize the fields
        status = deserializer.deserializeEmberStatus();
        int replyLength = deserializer.deserializeUInt8();
        reply= deserializer.deserializeUInt8Array(replyLength);
    }

    /**
     * The status returned by the custom command.
     * <p>
     * EZSP type is <i>EmberStatus</i> - Java type is {@link EmberStatus}
     *
     * @return the current status as {@link EmberStatus}
     */
    public EmberStatus getStatus() {
        return status;
    }

    /**
     * The status returned by the custom command.
     *
     * @param status the status to set as {@link EmberStatus}
     */
    public void setStatus(EmberStatus status) {
        this.status = status;
    }

    /**
     * The response.
     * <p>
     * EZSP type is <i>uint8_t[]</i> - Java type is {@link int[]}
     *
     * @return the current reply as {@link int[]}
     */
    public int[] getReply() {
        return reply;
    }

    /**
     * The response.
     *
     * @param reply the reply to set as {@link int[]}
     */
    public void setReply(int[] reply) {
        this.reply = reply;
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder(126);
        builder.append("EzspCustomFrameResponse [networkId=");
        builder.append(networkId);
        builder.append(", status=");
        builder.append(status);
        builder.append(", reply=");
        for (int cnt = 0; cnt < reply.length; cnt++) {
            if (cnt > 0) {
                builder.append(' ');
            }
            builder.append(reply[cnt]);
        }
        builder.append(']');
        return builder.toString();
    }
}
