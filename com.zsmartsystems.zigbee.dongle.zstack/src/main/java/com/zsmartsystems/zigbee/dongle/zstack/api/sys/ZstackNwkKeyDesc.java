/**
 * Copyright (c) 2016-2019 by the respective copyright holders.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zigbee.dongle.zstack.api.sys;

import com.zsmartsystems.zigbee.dongle.zstack.internal.serializer.ZstackDeserializer;
import com.zsmartsystems.zigbee.dongle.zstack.internal.serializer.ZstackSerializer;
import com.zsmartsystems.zigbee.security.ZigBeeKey;

/**
 * Class to implement the Z-Stack structure <b>ZstackNwkKeyDesc</b>.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson
 */
public class ZstackNwkKeyDesc {

    /**
     */
    private int keySeqNum;

    /**
     */
    private ZigBeeKey key;

    /**
     *
     *
     * @return the current keySeqNum as {@link int}
     */
    public int getKeySeqNum() {
        return keySeqNum;
    }

    /**
     *
     *
     * @param keySeqNum the keySeqNum to set as {@link int}
     */
    public void setKeySeqNum(int keySeqNum) {
        this.keySeqNum = keySeqNum;
    }

    /**
     *
     *
     * @return the current key as {@link ZigBeeKey}
     */
    public ZigBeeKey getKey() {
        return key;
    }

    /**
     *
     *
     * @param key the key to set as {@link ZigBeeKey}
     */
    public void setKey(ZigBeeKey key) {
        this.key = key;
    }

    /**
     * Serialize the data from this structure class to an integer array
     *
     * @param serializer the {@link ZstackSerializer} to use
     */
    public int[] serialize(ZstackSerializer serializer) {
        // Serialize the fields
        serializer.serializeUInt8(keySeqNum);
        serializer.serializeZigBeeKey(key);
        return serializer.getBuffer();
    }

    /**
     * Deserialize the data into this structure class
     *
     * @param deserializer the {@link ZstackDeserializer} to use
     */
    public void deserialize (ZstackDeserializer deserializer) {
        // Deserialize the fields
        keySeqNum = deserializer.deserializeUInt8();
        key = deserializer.deserializeZigBeeKey();
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder(69);
        builder.append("ZstackNwkKeyDesc [keySeqNum=");
        builder.append(keySeqNum);
        builder.append(", key=");
        builder.append(key);
        builder.append(']');
        return builder.toString();
    }
}
