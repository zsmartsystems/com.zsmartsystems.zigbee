/**
 * Copyright (c) 2016-2019 by the respective copyright holders.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zigbee.dongle.zstack.api.sys;

import com.zsmartsystems.zigbee.dongle.zstack.api.ZstackFrameResponse;

/**
 * Class to implement the Z-Stack command <b>SYS_PING</b>.
 * <p>
 * This command issues PING requests to verify if a device is active and check the capability of the device.
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 *
 * @author Chris Jackson
 */
public class ZstackSysPingSrsp extends ZstackFrameResponse {

    /**
     * This field represents the interfaces that this device can handle (compiled into the device).
     */
    private int capabilities;

    /**
     * Response and Handler constructor
     */
    public ZstackSysPingSrsp(int[] inputBuffer) {
        // Super creates deserializer and reads header fields
        super(inputBuffer);

        synchronousCommand = true;

        // Deserialize the fields
        capabilities = deserializer.deserializeUInt16();
    }

    /**
     * This field represents the interfaces that this device can handle (compiled into the device).
     *
     * @return the current capabilities as {@link int}
     */
    public int getCapabilities() {
        return capabilities;
    }

    /**
     * This field represents the interfaces that this device can handle (compiled into the device).
     *
     * @param capabilities the Capabilities to set as {@link int}
     */
    public void setCapabilities(int capabilities) {
        this.capabilities = capabilities;
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder(45);
        builder.append("ZstackSysPingSrsp [capabilities=");
        builder.append(String.format("%04X", capabilities));
        builder.append(']');
        return builder.toString();
    }
}
