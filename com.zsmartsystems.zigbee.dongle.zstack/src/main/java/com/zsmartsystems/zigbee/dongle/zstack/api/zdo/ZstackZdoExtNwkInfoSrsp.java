/**
 * Copyright (c) 2016-2022 by the respective copyright holders.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zigbee.dongle.zstack.api.zdo;

import com.zsmartsystems.zigbee.ExtendedPanId;
import com.zsmartsystems.zigbee.IeeeAddress;
import com.zsmartsystems.zigbee.dongle.zstack.api.ZstackFrameResponse;
import javax.annotation.Generated;

/**
 * Class to implement the Z-Stack command <b>ZDO_EXT_NWK_INFO</b>.
 * <p>
 * Get the network info from the device
 * <p>
 * Note that this code is autogenerated. Manual changes may be overwritten.
 */

@Generated(value = "com.zsmartsystems.zigbee.dongle.zstack.autocode.CommandGenerator", date = "Sun Mar 26 09:52:47 CEST 2023")
public class ZstackZdoExtNwkInfoSrsp extends ZstackFrameResponse {

    /**
     * Short address
     */
    private int shortAddress;

    /**
     * Unknown field
     */
    private int padding;

    /**
     * Pan id
     */
    private int panId;

    /**
     * Parent address
     */
    private int parentAddress;

    /**
     * Extended pan id
     */
    private ExtendedPanId extendedPanId;

    /**
     * Extended parent address
     */
    private IeeeAddress extendedParentAddress;

    /**
     * Channel
     */
    private int channel;

    /**
     * Response and Handler constructor
     */
    public ZstackZdoExtNwkInfoSrsp(int[] inputBuffer) {
        // Super creates deserializer and reads header fields
        super(inputBuffer);

        synchronousCommand = true;

        // Deserialize the fields
        shortAddress = deserializer.deserializeUInt16();
        padding = deserializer.deserializeUInt8();
        panId = deserializer.deserializeUInt16();
        parentAddress = deserializer.deserializeUInt16();
        extendedPanId = deserializer.deserializeExtendedPanId();
        extendedParentAddress = deserializer.deserializeIeeeAddress();
        channel = deserializer.deserializeUInt8();
    }

    /**
     * Short address
     *
     * @return the current shortAddress as {@link int}
     */
    public int getShortAddress() {
        return shortAddress;
    }

    /**
     * Short address
     *
     * @param shortAddress the ShortAddress to set as {@link int}
     */
    public void setShortAddress(int shortAddress) {
        this.shortAddress = shortAddress;
    }

    /**
     * Unknown field
     *
     * @return the current padding as {@link int}
     */
    public int getPadding() {
        return padding;
    }

    /**
     * Unknown field
     *
     * @param padding the Padding to set as {@link int}
     */
    public void setPadding(int padding) {
        this.padding = padding;
    }

    /**
     * Pan id
     *
     * @return the current panId as {@link int}
     */
    public int getPanId() {
        return panId;
    }

    /**
     * Pan id
     *
     * @param panId the PanId to set as {@link int}
     */
    public void setPanId(int panId) {
        this.panId = panId;
    }

    /**
     * Parent address
     *
     * @return the current parentAddress as {@link int}
     */
    public int getParentAddress() {
        return parentAddress;
    }

    /**
     * Parent address
     *
     * @param parentAddress the ParentAddress to set as {@link int}
     */
    public void setParentAddress(int parentAddress) {
        this.parentAddress = parentAddress;
    }

    /**
     * Extended pan id
     *
     * @return the current extendedPanId as {@link ExtendedPanId}
     */
    public ExtendedPanId getExtendedPanId() {
        return extendedPanId;
    }

    /**
     * Extended pan id
     *
     * @param extendedPanId the ExtendedPanId to set as {@link ExtendedPanId}
     */
    public void setExtendedPanId(ExtendedPanId extendedPanId) {
        this.extendedPanId = extendedPanId;
    }

    /**
     * Extended parent address
     *
     * @return the current extendedParentAddress as {@link IeeeAddress}
     */
    public IeeeAddress getExtendedParentAddress() {
        return extendedParentAddress;
    }

    /**
     * Extended parent address
     *
     * @param extendedParentAddress the ExtendedParentAddress to set as {@link IeeeAddress}
     */
    public void setExtendedParentAddress(IeeeAddress extendedParentAddress) {
        this.extendedParentAddress = extendedParentAddress;
    }

    /**
     * Channel
     *
     * @return the current channel as {@link int}
     */
    public int getChannel() {
        return channel;
    }

    /**
     * Channel
     *
     * @param channel the Channel to set as {@link int}
     */
    public void setChannel(int channel) {
        this.channel = channel;
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder(201);
        builder.append("ZstackZdoExtNwkInfoSrsp [shortAddress=");
        builder.append(String.format("%02X", shortAddress));
        builder.append(", padding=");
        builder.append(String.format("%01X", padding));
        builder.append(", panId=");
        builder.append(String.format("%02X", panId));
        builder.append(", parentAddress=");
        builder.append(String.format("%02X", parentAddress));
        builder.append(", extendedPanId=");
        builder.append(extendedPanId);
        builder.append(", extendedParentAddress=");
        builder.append(extendedParentAddress);
        builder.append(", channel=");
        builder.append(channel);
        builder.append(']');
        return builder.toString();
    }
}
