<cluster xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="zigbee-description.xsd" code="0x0701">
    <name>Demand Response And Load Control</name>
    <description>This cluster provides an interface to the functionality of Smart Energy Demand Response and Load Control. Devices targeted by this cluster include thermostats and devices that support load control.</description>
    <description>The ESI is defined as the Server due to its role in acting as the proxy for upstream demand response/load control management systems and subsequent data stores.</description>
    <description>A server device shall be capable of storing at least two load control events.</description>
    <description>Events carried using this cluster include a timestamp with the assumption that target devices maintain a real-time clock. If a device does not support a real-time clock, it is assumed the device will ignore all values within the Time field except the “Start Now” value.</description>
    <command code="0x00" source="client">
        <name>Report Event Status</name>
        <field type="UNSIGNED_32_BIT_INTEGER">
            <name>Issuer Event ID</name>
            <description>Unique identifier generated by the Energy provider. The value of this field allows matching of Event reports with a specific Demand Response and Load Control event. It's expected the value contained in this field is a unique number managed by upstream systems or a UTC based time stamp (UTCTime data type) identifying when the Load Control Event was issued.</description>
        </field>
        <field type="ENUMERATION_8_BIT" class="EventStatusEnum">
            <name>Event Status</name>
            <description>This lists the valid values returned in the Event Status field.</description>
        </field>
        <field type="UTCTIME">
            <name>Event Status Time</name>
            <description>UTC Timestamp representing when the event status occurred. This field shall not use the value of 0x00000000.</description>
        </field>
        <field type="ENUMERATION_8_BIT" class="CriticalityLevelEnum">
            <name>Criticality Level Applied</name>
            <description>Criticality Level value applied by the device, see the corresponding field in the Load Control Event command for more information.</description>
        </field>
        <field type="UNSIGNED_16_BIT_INTEGER">
            <name>Cooling Temperature Set Point Applied</name>
            <description>Cooling Temperature Set Point value applied by the device, see the corresponding field in the Load Control Event command for more information. The value 0x8000 means that this field has not been used by the end device.</description>
        </field>
        <field type="UNSIGNED_16_BIT_INTEGER">
            <name>Heating Temperature Set Point Applied</name>
            <description>Heating Temperature Set Point value applied by the device, see the corresponding field in the Load Control Event command for more information. The value 0x8000 means that this field has not been used by the end device.</description>
        </field>
        <field type="SIGNED_8_BIT_INTEGER">
            <name>Average Load Adjustment Percentage Applied</name>
            <description>Average Load Adjustment Percentage value applied by the device, see the corresponding field in the Load Control Event command for more information. The value 0x80 means that this field has not been used by the end device.</description>
        </field>
        <field type="UNSIGNED_8_BIT_INTEGER">
            <name>Duty Cycle Applied</name>
            <description>Defines the maximum On state duty cycle applied by the device. The value 0xFF means that this field has not been used by the end device.</description>
        </field>
        <field type="BITMAP_8_BIT" class="EventControlBitmap">
            <name>Event Control</name>
            <description>Identifies additional control options for the event.</description>
        </field>
        <field type="ENUMERATION_8_BIT" class="SignatureTypeEnum">
            <name>Signature Type</name>
            <description>An 8-bit Unsigned integer enumerating the type of algorithm use to create the Signature.</description>
        </field>
        <field type="OCTET_STRING" class="Signature">
            <name>Signature</name>
            <description>A non-repudiation signature created by using the Matyas-Meyer-Oseas hash function used in conjunction with ECDSA.</description>
        </field>
    </command>
    <command code="0x01" source="client">
        <name>Get Scheduled Events</name>
        <description>This command is used to request that all scheduled Load Control Events, starting at or after the supplied Start Time, are re-issued to the requesting device. When received by the Server, one or more Load Control Event commands will be sent covering both active and scheduled Load Control Events.</description>
        <field type="UTCTIME">
            <name>Start Time</name>
            <description>UTC Timestamp representing the minimum ending time for any scheduled or currently active events to be resent. If either command has a Start Time of 0x00000000, replace that Start Time with the current time stamp.</description>
        </field>
        <field type="UNSIGNED_8_BIT_INTEGER">
            <name>Number Of Events</name>
            <description>Represents the maximum number of events to be sent. A value of 0 would indicate all available events are to be returned. Example: Number of Events = 1 would return the first event with an EndTime greater than or equal to the value of Start Time field in the Get Scheduled Events command (EndTime would be StartTime plus Duration of the event listed in the device's event table).</description>
        </field>
    </command>
    <command code="0x00" source="server">
        <name>Load Control Event Command</name>
        <field type="UNSIGNED_32_BIT_INTEGER">
            <name>Issuer Event ID</name>
            <description>Unique identifier generated by the Energy provider. The value of this field allows matching of Event reports with a specific Demand Response and Load Control event. The expected value contained in this field shall be a unique number managed by upstream systems or a UTC based time stamp (UTCTime data type) identifying when the Load Control Event was issued.</description>
        </field>
        <field type="BITMAP_16_BIT" class="DeviceClassBitmap">
            <name>Device Class</name>
            <description>Bit encoded field representing the Device Class to apply the current Load Control Event. Each bit, if set individually or in combination, indicates the class device(s) needing to participate in the event. (Note that the participating device may be different than the controlling device. For instance, a thermostat may act on behalf of an HVAC compressor or furnace and/or Strip Heat/Baseboard Heater and should take action on their behalf, as the thermostat itself is not subject to load shed but controls devices that are subject to load shed.)</description>
        </field>
        <field type="UNSIGNED_8_BIT_INTEGER">
            <name>Utility Enrollment Group</name>
            <description>The Utility Enrollment Group field can be used in conjunction with the Device Class bits. It provides a mechanism to direct Load Control Events to groups of Devices. Example, by assigning two different groups relating to either Demand Response programs or geographic areas, Load Control Events can be further directed for a subset of Device Classes (i.e. Device Class Bit 0 and Utility Enrollment Group #1 vs. Device Class Bit0 and Utility Enrollment Group #2). 0x00 addresses all groups, and values 0x01 to 0xFF address individual groups that match.</description>
            <description>If the Device Class and/or Utility Enrollment Group fields don’t apply to your End Device, the Load Control Event command shall be ignored by either dropping the message and not replying at all or by sending back a Default Response message with a SUCCESS status code.</description>
        </field>
        <field type="UTCTIME">
            <name>Start Time</name>
            <description>UTC Timestamp representing when the event is scheduled to start. A start time of 0x00000000 is a special time denoting “now.” If the device would send an event with a Start Time of now, adjust the Duration In Minutes field to correspond to the remainder of the event.</description>
        </field>
        <field type="UNSIGNED_16_BIT_INTEGER">
            <name>Duration In Minutes</name>
            <description>Duration of this event in number of minutes. Maximum value is 1440 (one day).</description>
        </field>
        <field type="ENUMERATION_8_BIT" class="CriticalityLevelEnum">
            <name>Criticality Level</name>
            <description>This field defines the level of criticality of this event. The action taken by load control devices for an event can be solely based on this value, or combination with other Load Control Event fields supported by this device. For example, additional fields such as Average Load Adjustment Percentage, Duty Cycle, Cooling Temperature Offset, Heating Temperature Offset, Cooling Temperature Set Point or Heating Temperature Set Point can be used in combination with the Criticality level.</description>
        </field>
        <field type="UNSIGNED_8_BIT_INTEGER">
            <name>Cooling Temperature Offset</name>
            <description>Requested offset to apply to the normal cooling setpoint at the time of the start of the event in + 0.1 oC.</description>
        </field>
        <field type="UNSIGNED_8_BIT_INTEGER">
            <name>Heating Temperature Offset</name>
            <description>Requested offset to apply to the normal heating setpoint at the time of the start of the event in + 0.1 oC.</description>
        </field>
        <field type="SIGNED_16_BIT_INTEGER">
            <name>Cooling Temperature Set Point</name>
            <description>Requested cooling set point in 0.01 degrees Celsius.</description>
        </field>
        <field type="SIGNED_16_BIT_INTEGER">
            <name>Heating Temperature Set Point</name>
            <description>Requested heating set point in 0.01 degrees Celsius.</description>
        </field>
        <field type="SIGNED_8_BIT_INTEGER">
            <name>Average Load Adjustment Percentage</name>
            <description>Defines a maximum energy usage limit as a percentage of the client implementations specific average energy usage. The load adjustment percentage is added to 100% creating a percentage limit applied to the client implementations specific average energy usage. A -10% load adjustment percentage will establish an energy usage limit equal to 90% of the client implementations specific average energy usage. Each load adjustment percentage is referenced to the client implementations specific average energy usage. There are no cumulative effects.</description>
			<description>The range of this field is -100 to +100 with a resolution of 1 percent. A -100% value equals a total load shed. A 0% value will limit the energy usage to the client implementation’s specific average energy usage. A +100% value will limit the energy usage to double the client implementation’s specific average energy usage.</description>
			<description>A value of 0x80 indicates the field is not used. All other values are reserved for future use.</description>
        </field>
        <field type="UNSIGNED_8_BIT_INTEGER">
            <name>Duty Cycle</name>
            <description>Defines the maximum On state duty cycle as a percentage of time. Example, if the value is 80, the device would be in an “on state” for 80% of the time for the duration of the event. Range of the value is 0 to 100. A value of 0xFF indicates the field is not used. All other values are reserved for future use.</description>
            <description>Duty cycle control is a device specific issue and shall be managed by the device manufacturer. It is expected that the duty cycle of the device under control will span the shortest practical time period in accordance with the nature of the device under control and the intent of the request for demand reduction. For typical Device Classes, three minutes7 for each 10% of duty cycle is recommended. It is expected that the “off state” will precede the “on state”.</description>
        </field>
        <field type="BITMAP_8_BIT" class="EventControlBitmap">
            <name>Event Control</name>
            <description>Identifies additional control options for the event.</description>
        </field>
    </command>
    <command code="0x01" source="server">
        <name>Cancel Load Control Event</name>
        <field type="UNSIGNED_32_BIT_INTEGER">
            <name>Issuer Event ID</name>
            <description>Unique identifier generated by the Energy provider. The value of this field allows matching of Event reports with a specific Demand Response and Load Control event. It's expected the value contained in this field is a unique number managed by upstream systems or a UTC based time stamp (UTCTime data type) identifying when the Load Control Event was issued.</description>
        </field>
        <field type="BITMAP_16_BIT" class="DeviceClassBitmap">
            <name>Device Class</name>
            <description>Bit encoded field representing the Device Class to apply the current Load Control Event. Each bit, if set individually or in combination, indicates the class device(s) needing to participate in the event. (Note that the participating device may be different than the controlling device. For instance, a thermostat may act on behalf of an HVAC compressor or furnace and/or Strip Heat/Baseboard Heater and should take action on their behalf, as the thermostat itself is not subject to load shed but controls devices that are subject to load shed.) </description>
        </field>
        <field type="UNSIGNED_8_BIT_INTEGER">
            <name>Utility Enrollment Group</name>
            <description>The Utility Enrollment Group field can be used in conjunction with the Device Class bits. It provides a mechanism to direct Load Control Events to groups of Devices. Example, by assigning two different groups relating to either Demand Response programs or geographic areas, Load Control Events can be further directed for a subset of Device Classes (i.e. Device Class Bit 0 and Utility Enrollment Group #1 vs. Device Class Bit0 and Utility Enrollment Group #2). 0x00 addresses all groups, and values 0x01 to 0xFF address individual groups that match. Please refer to sub-clause D.2.3.2.1 for further details.</description>
        </field>
        <field type="BITMAP_8_BIT" class="CancelControlBitmap">
            <name>Cancel Control</name>
        </field>
        <field type="UTCTIME">
            <name>Effective Time</name>
			<description>Note: This field is deprecated; a Cancel Load Control command shall now take immediate effect. A value of 0x00000000 shall be used in all Cancel Load Control commands</description>
            <description>UTC Timestamp representing when the cancelling of the event is scheduled to start. An effective time of 0x00000000 is a special time denoting “now.” If the device would send an event with an Effective Time of now, adjust the Duration In Minutes field to correspond to the remainder of the event.</description>
        </field>
    </command>
    <command code="0x02" source="server">
        <name>Cancel All Load Control Events</name>
        <field type="BITMAP_8_BIT" class="CancelControlBitmap">
            <name>Cancel Control</name>
        </field>
    </command>
    
    <attribute code="0x0000" type="UNSIGNED_8_BIT_INTEGER" side="client" optional="true" writable="true" reportable="true" minimum="0x00" maximum="0xFF" default="0x00">
        <name>Utility Enrollment Group</name>
        <description>The UtilityEnrollmentGroup provides a method for utilities to assign devices to groups. In other words, Utility defined groups provide a mechanism to arbitrarily group together different sets of load control or demand response devices for use as part of a larger utility program. The definition of the groups, implied usage, and their assigned values are dictated by the Utilities and subsequently used at their discretion, therefore outside the scope of this specification. The valid range for this attribute is 0x00 to 0xFF, where 0x00 (the default value) indicates the device is a member of all groups and values 0x01 to 0xFF indicates that the device is member of that specified group.</description>
    </attribute>
    <attribute code="0x0001" type="UNSIGNED_8_BIT_INTEGER" side="client" optional="true" writable="true" reportable="true" minimum="0x00" maximum="0x3C" default="0x1E">
        <name>Start Randomization Minutes</name>
        <description>The StartRandomizedMinutes represents the maximum number of minutes to be used when randomizing the start of an event. As an example, if StartRandomizedMinutes is set for 3 minutes, the device could randomly select 2 minutes (but never greater than the 3 minutes) for this event, causing the start of the event to be delayed by two minutes. The valid range for this attribute is 0x00 to 0x3C where 0x00 indicates start event randomization is not performed.</description>
    </attribute>
    <attribute code="0x0002" type="UNSIGNED_8_BIT_INTEGER" side="client" optional="true" writable="true" reportable="true" minimum="0x00" maximum="0x3C" default="0x00">
        <name>End Randomization Minutes</name>
        <description>The EndRandomizedMinutes represents the maximum number of minutes to be used when randomizing the end of an event. As an example, if EndRandomizedMinutes is set for 3 minutes, the device could randomly select one minute (but never greater than 3 minutes) for this event, causing the end of the event to be delayed by one minute. The valid range for this attribute is 0x00 to 0x3C where 0x00 indicates end event randomization is not performed.</description>
    </attribute>
    <attribute code="0x0003" type="UNSIGNED_16_BIT_INTEGER" class="DeviceClassBitmap" side="client" optional="true" writable="true" reportable="true" minimum="0x0000" maximum="0xFFFF">
        <name>Device Class Value</name>
        <description>The DeviceClassValue attribute identifies which bits the device will match in the Device Class fields. Please refer to Table D-2, “Device Class Field BitMap/ Encoding” for further details. Although the attribute has a read/write access property, the device is permitted to refuse to change the DeviceClass by setting the status field of the corresponding write attribute status record to NOT_AUTHORIZED.</description>
        <description>Although, for backwards compatibility, the Type cannot be changed, this 16-bit Integer should be treated as if it were a 16-bit BitMap.</description>
        <description>Device Class and/or Utility Enrollment Group fields are to be used as filters for deciding to accept or ignore a Load Control Event or a Cancel Load Control Event command. There is no requirement for a device to store or remember the Device Class and/or Utility Enrollment Group once the decision to accept the event has been made. A consequence of this is that devices that accept multiple device classes may have an event created for one device class superseded by an event created for another device class.</description>
    </attribute>

    <constant type="BITMAP_8_BIT" class="CancelControlBitmap">
        <name>Cancel Control</name>
        <value code="0x01" name="Terminate With Randomization">
        </value>
    </constant>
    <constant type="ENUMERATION_8_BIT" class="CriticalityLevelEnum">
        <name>Criticality Level</name>
        <value code="0x01" name="Green">
        </value>
        <value code="0x02" name="Level 1">
        </value>
        <value code="0x03" name="Level 2">
        </value>
        <value code="0x04" name="Level 3">
        </value>
        <value code="0x05" name="Level 4">
        </value>
        <value code="0x06" name="Level 5">
        </value>
        <value code="0x07" name="Emergency">
        </value>
        <value code="0x08" name="Planned Outage">
        </value>
        <value code="0x09" name="Service Disconnect">
        </value>
        <value code="0x0A" name="Utility Defined 1">
        </value>
        <value code="0x0B" name="Utility Defined 2">
        </value>
        <value code="0x0C" name="Utility Defined 3">
        </value>
        <value code="0x0D" name="Utility Defined 4">
        </value>
        <value code="0x0E" name="Utility Defined 5">
        </value>
        <value code="0x0F" name="Utility Defined 6">
        </value>
    </constant>
    <constant type="BITMAP_16_BIT" class="DeviceClassBitmap">
        <name>Device Class</name>
        <description>Although, for backwards compatibility, the Type cannot be changed, this 16-bit Integer should be treated as if it were a 16-bit BitMap.</description>
        <value code="0x0001" name="Hvac Compressor Or Furnace">
        </value>
        <value code="0x0002" name="Strip Heat Baseboard Heat">
        </value>
        <value code="0x0004" name="Water Heater">
        </value>
        <value code="0x0008" name="Pool Pump Spa Jacuzzi">
        </value>
        <value code="0x0010" name="Smart Appliances">
        </value>
        <value code="0x0020" name="Irrigation Pump">
        </value>
        <value code="0x0040" name="Managed C And I Loads">
        </value>
        <value code="0x0080" name="Simple Misc Loads">
        </value>
        <value code="0x0100" name="Exterior Lighting">
        </value>
        <value code="0x0200" name="Interior Lighting">
        </value>
        <value code="0x0400" name="Electric Vehicle">
        </value>
        <value code="0x0800" name="Generation Systems">
        </value>
    </constant>
    <constant type="BITMAP_8_BIT" class="EventControlBitmap">
        <name>Event Control</name>
        <value code="0x01" name="Randomized Start Time">
        </value>
        <value code="0x02" name="Randomized End Time">
        </value>
    </constant>
    <constant type="ENUMERATION_8_BIT" class="EventStatusEnum">
        <name>Event Status</name>
        <value code="0x01" name="Load Control Event Command Rx">
        </value>
        <value code="0x02" name="Event Started">
        </value>
        <value code="0x03" name="Event Completed">
        </value>
        <value code="0x04" name="User Has Choose To Opt Out">
        </value>
        <value code="0x05" name="User Has Choose To Opt In">
        </value>
        <value code="0x06" name="The Event Has Been Canceled">
        </value>
        <value code="0x07" name="The Event Has Been Superseded">
        </value>
        <value code="0x08" name="Event Partially Completed With User Opt Out">
        </value>
        <value code="0x09" name="Event Partially Completed Due To User Opt In">
        </value>
        <value code="0x0A" name="Event Completed No User Participation Previous Opt Out">
        </value>
        <value code="0xF6" name="Invalid Opt Out">
        </value>
        <value code="0xF7" name="Event Not Found">
        </value>
        <value code="0xF8" name="Rejected Invalid Cancel Command">
        </value>
        <value code="0xF9" name="Rejected Invalid Cancel Command Invalid Effective Time">
        </value>
        <value code="0xFB" name="Rejected Event Expired">
        </value>
        <value code="0xFD" name="Rejected Invalid Cancel Undefined Event">
        </value>
        <value code="0xFE" name="Load Control Event Command Rejected">
        </value>
    </constant>
    <constant type="ENUMERATION_8_BIT" class="SignatureTypeEnum">
        <name>Signature Type</name>
        <value code="0x01" name="ECDSA">
        </value>
    </constant>
</cluster>
