package com.zsmartsystems.zigbee.zdo.command;

import com.zsmartsystems.zigbee.zcl.ZclFieldSerializer;
import com.zsmartsystems.zigbee.zcl.ZclFieldDeserializer;
import com.zsmartsystems.zigbee.zcl.protocol.ZclDataType;
import com.zsmartsystems.zigbee.zdo.ZdoResponse;

import java.util.List;

/**
 * Active Endpoints Response value object class.
 * <p>
 * The Active_EP_rsp is generated by a remote device in response to an
 * Active_EP_req directed to the remote device. This command shall be unicast to
 * the originator of the Active_EP_req command.
 * <p>
 * Code is auto-generated. Modifications may be overwritten!
 */
public class ActiveEndpointsResponse extends ZdoResponse {
    /**
     * NWKAddrOfInterest command message field.
     */
    private Integer nwkAddrOfInterest;

    /**
     * ActiveEPList command message field.
     */
    private List<Integer> activeEpList;

    /**
     * Default constructor.
     */
    public ActiveEndpointsResponse() {
        clusterId = 0x8005;
    }

    /**
     * Gets NWKAddrOfInterest.
     *
     * @return the NWKAddrOfInterest
     */
    public Integer getNwkAddrOfInterest() {
        return nwkAddrOfInterest;
    }

    /**
     * Sets NWKAddrOfInterest.
     *
     * @param nwkAddrOfInterest the NWKAddrOfInterest
     */
    public void setNwkAddrOfInterest(final Integer nwkAddrOfInterest) {
        this.nwkAddrOfInterest = nwkAddrOfInterest;
    }

    /**
     * Gets ActiveEPList.
     *
     * @return the ActiveEPList
     */
    public List<Integer> getActiveEpList() {
        return activeEpList;
    }

    /**
     * Sets ActiveEPList.
     *
     * @param activeEpList the ActiveEPList
     */
    public void setActiveEpList(final List<Integer> activeEpList) {
        this.activeEpList = activeEpList;
    }

    @Override
    public void serialize(final ZclFieldSerializer serializer) {
        super.serialize(serializer);

        serializer.serialize(status, ZclDataType.UNSIGNED_8_BIT_INTEGER);
        serializer.serialize(nwkAddrOfInterest, ZclDataType.NWK_ADDRESS);
        serializer.serialize(activeEpList, ZclDataType.N_X_ENDPOINT);
    }

    @Override
    public void deserialize(final ZclFieldDeserializer deserializer) {
        super.deserialize(deserializer);

        status = (Integer) deserializer.deserialize(ZclDataType.UNSIGNED_8_BIT_INTEGER);
        if (status != 0) {
            // Don't read the full response if we have an error
            return;
        }
        nwkAddrOfInterest = (Integer) deserializer.deserialize(ZclDataType.NWK_ADDRESS);
        activeEpList = (List<Integer>) deserializer.deserialize(ZclDataType.N_X_ENDPOINT);
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder();
        builder.append("ActiveEndpointsResponse");
        builder.append(super.toString());
        builder.append(", status=");
        builder.append(status);
        builder.append(", nwkAddrOfInterest=");
        builder.append(nwkAddrOfInterest);
        builder.append(", activeEpList=");
        builder.append(activeEpList);
        return builder.toString();
    }

}
