/**
 * Copyright (c) 2016-2019 by the respective copyright holders.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 */
package com.zsmartsystems.zigbee.zcl.clusters.pollcontrol;

import javax.annotation.Generated;

import com.zsmartsystems.zigbee.zcl.ZclCommand;
import com.zsmartsystems.zigbee.zcl.protocol.ZclCommandDirection;

/**
 * Check In Command value object class.
 * <p>
 * Cluster: <b>Poll Control</b>. Command is sent <b>FROM</b> the server.
 * This command is a <b>specific</b> command used for the Poll Control cluster.
 * <p>
 * The Poll Control Cluster server sends out a Check-in command to the devices to which it is paired based on the serverâ€™s Check-inInterval
 * attribute. It does this to find out if any of the Poll Control Cluster Clients with which it is paired are interested in having it enter fast
 * poll mode so that it can be managed. This request is sent out based on either the Check-inInterval, or the next Check-in value in the Fast Poll
 * Stop Request generated by the Poll Control Cluster Client.
 * <br>
 * The Check-in command expects a Check-in Response command to be sent back from the Poll Control Client. If the Poll Control Server does not
 * receive a Check-in response back from the Poll Control Client up to 7.68 seconds it is free to return to polling according to the
 * LongPollInterval.
 * <p>
 * Code is auto-generated. Modifications may be overwritten!
 */
@Generated(value = "com.zsmartsystems.zigbee.autocode.ZclProtocolCodeGenerator", date = "2018-05-06T20:48:39Z")
public class CheckInCommand extends ZclCommand {
    /**
     * Default constructor.
     */
    public CheckInCommand() {
        genericCommand = false;
        clusterId = 32;
        commandId = 0;
        commandDirection = ZclCommandDirection.SERVER_TO_CLIENT;
    }

    @Override
    public String toString() {
        final StringBuilder builder = new StringBuilder(17);
        builder.append("CheckInCommand [");
        builder.append(super.toString());
        builder.append(']');
        return builder.toString();
    }

}
